services:
  postgres:
    image: postgres:${POSTGRES_VERSION}
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
      - ./scripts/init-postgres.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - intellexa-network
    ports:
      - "5432:5432"

  timescale:
    image: timescale/timescaledb:${TIMESCALE_VERSION}
    environment:
      POSTGRES_USER: ${TIMESCALE_USER}
      POSTGRES_PASSWORD: ${TIMESCALE_PASSWORD}
      POSTGRES_DB: metrics
    volumes:
      - ./scripts/init-timescale.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - intellexa-network
    ports:
      - "5433:5432"

  weaviate:
    image: semitechnologies/weaviate:${WEAVIATE_VERSION}
    environment:
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'true'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
    volumes:
      - ./data/weaviate:/var/lib/weaviate
      - ./scripts/init-weaviate.json:/etc/weaviate/schema.json
    networks:
      - intellexa-network
    ports:
      - "8082:8080"

  redis:
    image: redis:${REDIS_VERSION}
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - ./data/redis:/data
    networks:
      - intellexa-network
    ports:
      - "6379:6379"

  minio:
    image: minio/minio:${MINIO_VERSION}
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - ./data/minio:/data
    networks:
      - intellexa-network
    ports:
      - "9002:9000"
      - "9003:9001"

networks:
  intellexa-network:
    driver: bridge
